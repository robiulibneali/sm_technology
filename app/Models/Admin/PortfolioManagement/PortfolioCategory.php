<?php

namespace App\Models\Admin\PortfolioManagement;

use App\Models\Scopes\Searchable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Factories\HasFactory;

class PortfolioCategory extends Model
{
    use HasFactory;
    use Searchable;

    protected $fillable = [
        'portfolio_category_id',
        'name',
        'image',
        'description',
        'status',
    ];

    protected $searchableFields = ['*'];

    protected $table = 'portfolio_categories';

    protected static $portfolioCategory;

    protected static function boot()  // better use this method
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::deleting(function ($portfolioCategory) {
            if (!empty($portfolioCategory->portfolios))
            {
                $portfolioCategory->portfolios->each->delete();
            }
        });
    }

    public static function createOrUpdatePortfolioCategory($request, $id = null)
    {
        if (isset($id))
        {
            self::$portfolioCategory = PortfolioCategory::find($id);
        } else {
            self::$portfolioCategory = new PortfolioCategory();
        }
        self::$portfolioCategory->portfolio_category_id     = $request->portfolio_category_id ?? 0;
        self::$portfolioCategory->name                      = $request->name;
        self::$portfolioCategory->description               = $request->description;
        self::$portfolioCategory->image                     = fileUpload($request->file('image'), 'portfolio_management/portfolio_categories', isset($id) ? static::find($id)->image : '');
        self::$portfolioCategory->status                    = $request->status == 'on' ? 1 : 0;
        self::$portfolioCategory->save();
//        return self::$portfolioCategory;

//        PortfolioCategory::updateOrCreate(['id' => $id], [
//            'portfolio_category_id'     => $request->portfolio_category_id ?? 0,
//            'name'                      => $request->name,
//            'description'               => $request->description,
//            'image'                     => fileUpload($request->file('image'), 'portfolio_management/portfolio_categories', isset($id) ? static::find($id)->image : ''),
//            'status'                    => $request->status == 'on' ? 1 : 0,
//        ]);
    }

    public static function deletePortfolioCategory($id)
    {
        self::$portfolioCategory = PortfolioCategory::find($id);
        deleteFileFromServer(self::$portfolioCategory->image);
        self::$portfolioCategory->delete();
    }

    public function portfolioCategory()
    {
        return $this->belongsTo(PortfolioCategory::class);
    }

    public function portfolioCategories()
    {
        return $this->hasMany(PortfolioCategory::class);
    }

    public function portfolios()
    {
        return $this->belongsToMany(Portfolio::class)->withPivot('portfolio_category_id', 'portfolio_id', 'link');
    }
}
